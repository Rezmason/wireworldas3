Fill API
	loadFromDisk
	loadFromURL
	saveSnapshot
	chooseTool
	reset
	pause
	step
	toggleOverdrive
	togglePlayPause
	toggleHeat
	adjustSpeed
	adjustZoom
	resetView
	dispose
	showHelp
	showAbout
	hideAlert

AIR app menu system (connects to API)
	File
		Open (Cmd + O)
		Open URL (Cmd + U)
		Macs: Open Recent
		Save Snapshot (Cmd + Shift + S)
		PCs: [Recent list]
		Macs: Quit (Cmd + Q)
		Pcs: Exit
	Playback
		Toggle Overdrive ( O )
		Slow Down ( - )
		Speed Up ( = )
		Hand ( H )
		Eraser ( E )
		Play / Pause ( Spc )
		Reset ( Esc )
		Step ( . )
	Brain
		Standard (TDSI) (Cmd + 1)
		ByteArray (Cmd + 2)
		Vector (Cmd + 3)
		Linked List (Cmd + 4)
		Pixel Bender (Cmd + 5)
		Convolution Filter (Cmd + 6)
		Stupid (Cmd + 7)
	View
		Zoom In (Cmd + =)
		Zoom Out (Cmd + -)
		Reset Zoom (Cmd + 0)
		Toggle Heatmap (Cmd + T)
	Macs: Window
		Minimize (Cmd + M)
		Zoom
	App/Help
		About Wireworld
		What is this? (Cmd + ?)

AIR app drag and drop
	Grabs file types from API
	
Test AIR app on Mac and PC

WireworldAndroid
	Get it to build with AIR 2.5
	Run the APK maker on the resulting SWF

Use fcsh instead of mxmlc in build scripts
	fcshctl

Example gallery
	Controller
		Detect an example gallery XML file
		If the XML is loaded successfully, add the gallery button in the view
	
	The dialog is an accordion list of documents sorted by author and name
	Highlighting a file name enables the Load button

When you get CS5, replace the text elements with TLF
	Then allow all UI elements to scale in the View

Use SVG instead of MovieClips in the FLA?
	What's the nicest way to represent View elements in an open source project?

Try working with the tree model again











Increase instance size limit (or not)
	BAMF - stitched together BitmapData objects
		Spits out a Shape that can represent it onscreen
	FilterModel and PixelBenderModel still limit the size to that of a BitmapData object
		They internally represent the data as BitmapData objects